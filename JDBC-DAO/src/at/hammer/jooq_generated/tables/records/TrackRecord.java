/**
 * This class is generated by jOOQ
 */
package at.hammer.jooq_generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrackRecord extends org.jooq.impl.UpdatableRecordImpl<at.hammer.jooq_generated.tables.records.TrackRecord> implements org.jooq.Record9<java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.Integer, java.math.BigDecimal> {

	private static final long serialVersionUID = 1541476605;

	/**
	 * Setter for <code>chinook.track.TrackId</code>. 
	 */
	public void setTrackid(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>chinook.track.TrackId</code>. 
	 */
	public java.lang.Integer getTrackid() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>chinook.track.Name</code>. 
	 */
	public void setName(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>chinook.track.Name</code>. 
	 */
	public java.lang.String getName() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>chinook.track.AlbumId</code>. 
	 */
	public void setAlbumid(java.lang.Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>chinook.track.AlbumId</code>. 
	 */
	public java.lang.Integer getAlbumid() {
		return (java.lang.Integer) getValue(2);
	}

	/**
	 * Setter for <code>chinook.track.MediaTypeId</code>. 
	 */
	public void setMediatypeid(java.lang.Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>chinook.track.MediaTypeId</code>. 
	 */
	public java.lang.Integer getMediatypeid() {
		return (java.lang.Integer) getValue(3);
	}

	/**
	 * Setter for <code>chinook.track.GenreId</code>. 
	 */
	public void setGenreid(java.lang.Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>chinook.track.GenreId</code>. 
	 */
	public java.lang.Integer getGenreid() {
		return (java.lang.Integer) getValue(4);
	}

	/**
	 * Setter for <code>chinook.track.Composer</code>. 
	 */
	public void setComposer(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>chinook.track.Composer</code>. 
	 */
	public java.lang.String getComposer() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>chinook.track.Milliseconds</code>. 
	 */
	public void setMilliseconds(java.lang.Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>chinook.track.Milliseconds</code>. 
	 */
	public java.lang.Integer getMilliseconds() {
		return (java.lang.Integer) getValue(6);
	}

	/**
	 * Setter for <code>chinook.track.Bytes</code>. 
	 */
	public void setBytes(java.lang.Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>chinook.track.Bytes</code>. 
	 */
	public java.lang.Integer getBytes() {
		return (java.lang.Integer) getValue(7);
	}

	/**
	 * Setter for <code>chinook.track.UnitPrice</code>. 
	 */
	public void setUnitprice(java.math.BigDecimal value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>chinook.track.UnitPrice</code>. 
	 */
	public java.math.BigDecimal getUnitprice() {
		return (java.math.BigDecimal) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.Integer, java.math.BigDecimal> fieldsRow() {
		return (org.jooq.Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.Integer, java.math.BigDecimal> valuesRow() {
		return (org.jooq.Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return at.hammer.jooq_generated.tables.Track.TRACK.TRACKID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return at.hammer.jooq_generated.tables.Track.TRACK.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field3() {
		return at.hammer.jooq_generated.tables.Track.TRACK.ALBUMID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field4() {
		return at.hammer.jooq_generated.tables.Track.TRACK.MEDIATYPEID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field5() {
		return at.hammer.jooq_generated.tables.Track.TRACK.GENREID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return at.hammer.jooq_generated.tables.Track.TRACK.COMPOSER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field7() {
		return at.hammer.jooq_generated.tables.Track.TRACK.MILLISECONDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field8() {
		return at.hammer.jooq_generated.tables.Track.TRACK.BYTES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.math.BigDecimal> field9() {
		return at.hammer.jooq_generated.tables.Track.TRACK.UNITPRICE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getTrackid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value3() {
		return getAlbumid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value4() {
		return getMediatypeid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value5() {
		return getGenreid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getComposer();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value7() {
		return getMilliseconds();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value8() {
		return getBytes();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.math.BigDecimal value9() {
		return getUnitprice();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TrackRecord
	 */
	public TrackRecord() {
		super(at.hammer.jooq_generated.tables.Track.TRACK);
	}

	/**
	 * Create a detached, initialised TrackRecord
	 */
	public TrackRecord(java.lang.Integer trackid, java.lang.String name, java.lang.Integer albumid, java.lang.Integer mediatypeid, java.lang.Integer genreid, java.lang.String composer, java.lang.Integer milliseconds, java.lang.Integer bytes, java.math.BigDecimal unitprice) {
		super(at.hammer.jooq_generated.tables.Track.TRACK);

		setValue(0, trackid);
		setValue(1, name);
		setValue(2, albumid);
		setValue(3, mediatypeid);
		setValue(4, genreid);
		setValue(5, composer);
		setValue(6, milliseconds);
		setValue(7, bytes);
		setValue(8, unitprice);
	}
}
